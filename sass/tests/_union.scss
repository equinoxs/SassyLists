@include describe("Union") {
    
    @include it("should make a union of unique items in the arrays") {
        $numbers-1: 1 2 3;
        $numbers-2: 2 4 5;
        $numbers-3: 6 2 1;

        $strings-1: "a" "b" "c";
        $strings-2: "b" "d" "c";
        $strings-3: "a" "c" "b";

        $booleans-1: true false false;
        $booleans-2: true  null false;
        $booleans-3: null  null  true;

        @include should(expect( union( $numbers-1,  $numbers-2,  $numbers-3) ), to( equal( ( 1 2 3 4 5 6  )    )));
        @include should(expect( union( $strings-1,  $strings-2,  $strings-3) ), to( equal( ( "a" "b" "c" "d" ) )));
        @include should(expect( union($booleans-1, $booleans-2, $booleans-3) ), to( equal( ( true false null ) )));
    }

    @include it("should return one item if all the items are the same") {
        @include should(expect( union(1 1 1) ), to( equal( ( 1 ) )));
        @include should(expect( union("foo" "foo" "foo") ), to( equal( ( "foo" ) )));
        @include should(expect( union(false false false) ), to( equal( ( false ) )));
    }

    //  @include it("should leave an empty array alone") {
    //    @include should(expect( union( () ) ), to( be-empty() ));
    //  }
}