@include describe("Slice") {

    @include it("should stay the same without a min or max") {
        $numbers  : 1 2 3 4 5;
        $strings  : "foo" "bar" "baz" "caw" "tun";
        $lengths  : 1em 2px 0.2in 1en 7cm;
        $booleans : true false true true false;

        @include should(expect( slice( $numbers  ) ), to( deep-equal( 1 2 3 4 5                     ) ));
        @include should(expect( slice( $strings  ) ), to( deep-equal( "foo" "bar" "baz" "caw" "tun" ) ));
        @include should(expect( slice( $lengths  ) ), to( deep-equal( 1em 2px 0.2in 1en 7cm         ) ));
        @include should(expect( slice( $booleans ) ), to( deep-equal( true false true true false    ) ));
    }

    @include it("should cut off the list at min") {
        $numbers  : 1 2 3 4 5;
        $strings  : "foo" "bar" "baz" "caw" "tun";
        $lengths  : 1em 2px 0.2in 1en 7cm;
        $booleans : true false true true false;

        @include should(expect( slice( $numbers  , 2 ) ), to( deep-equal( 2 3 4 5                       ) ));
        @include should(expect( slice( $strings  , 2 ) ), to( deep-equal( "bar" "baz" "caw" "tun"       ) ));
        @include should(expect( slice( $lengths  , 2 ) ), to( deep-equal( 2px 0.2in 1en 7cm             ) ));
        @include should(expect( slice( $booleans , 2 ) ), to( deep-equal( false true true false         ) ));
    }

// @include it("should cut off the list at negative min") {
//   $numbers: 1, 2, 3, 4, 5;
//   $strings: "foo", "bar", "baz", "caw", "tun";
//   $booleans: true, false, true, true, false;
//   $lengths: 1em, 2px, 0.2in, 1en, 7cm;

//   @include should(expect( slice($numbers, -1) ), to( deep-equal( ( 5 )         )));
//   @include should(expect( slice($strings, -1) ), to( deep-equal( ( "tun" )     )));
//   @include should(expect( slice($booleans, -1) ), to( deep-equal( ( false )     )));
//   @include should(expect( slice($lengths, -1) ), to( deep-equal( ( 7cm )       )));
// }

    @include it("should cut off the list at max") {
        $numbers  : 1 2 3 4 5;
        $strings  : "foo" "bar" "baz" "caw" "tun";
        $lengths  : 1em 2px 0.2in 1en 7cm;
        $booleans : true false true true false;

        @include should(expect( slice( $numbers  , $end: 4 ) ), to( deep-equal( 1 2 3 4                       ) ));
        @include should(expect( slice( $strings  , $end: 4 ) ), to( deep-equal( "foo" "bar" "baz" "caw"       ) ));
        @include should(expect( slice( $lengths  , $end: 4 ) ), to( deep-equal( 1em 2px 0.2in 1en             ) ));
        @include should(expect( slice( $booleans , $end: 4 ) ), to( deep-equal( true false true true          ) ));
    }

//  @include it("should cut off the list at negative min") {
//    $numbers: 1, 2, 3, 4, 5;
//    $strings: "foo", "bar", "baz", "caw", "tun";
//    $booleans: true, false, true, true, false;
//    $lengths: 1em, 2px, 0.2in, 1en, 7cm;
//
//    @include should(expect( slice($numbers, $end: -1) ), to( deep-equal( ( 1, 2, 3, 4 )                  )));
//    @include should(expect( slice($strings, $end: -1) ), to( deep-equal( ( "foo", "bar", "baz", "caw" )  )));
//    @include should(expect( slice($booleans, $end: -1) ), to( deep-equal( ( true, false, true, true )     )));
//    @include should(expect( slice($lengths, $end: -1) ), to( deep-equal( ( 1em, 2px, 0.2in, 1en )        )));
//  }

    @include it("should cut off the list at min and max") {
        $numbers: 1 2 3 4 5;
        $strings: "foo" "bar" "baz" "caw" "tun";
        $lengths: 1em 2px 0.2in 1en 7cm;
        $booleans: true false true true false;

        @include should(expect( slice( $numbers  , 2, 4 ) ), to( deep-equal( 2 3 4               ) ));
        @include should(expect( slice( $strings  , 2, 4 ) ), to( deep-equal( "bar" "baz" "caw"   ) ));
        @include should(expect( slice( $lengths  , 2, 4 ) ), to( deep-equal( 2px 0.2in 1en       ) ));
        @include should(expect( slice( $booleans , 2, 4 ) ), to( deep-equal( false true true     ) ));
    }

//  @include it("should cut off the list at negative min and max") {
//    $numbers: 1, 2, 3, 4, 5;
//    $strings: "foo", "bar", "baz", "caw", "tun";
//    $booleans: true, false, true, true, false;
//    $lengths: 1em, 2px, 0.2in, 1en, 7cm;
//
//    @include should(expect( slice($numbers, -3, 4) ), to( deep-equal( ( 3, 4 )         )));
//    @include should(expect( slice($strings, -3, 4) ), to( deep-equal( ( "baz", "caw" ) )));
//    @include should(expect( slice($booleans, -3, 4) ), to( deep-equal( ( true, true )   )));
//    @include should(expect( slice($lengths, -3, 4) ), to( deep-equal( ( 0.2in, 1en )   )));
//  }

//  @include it("should cut off the list at min and negative max") {
//    $numbers: 1, 2, 3, 4, 5;
//    $strings: "foo", "bar", "baz", "caw", "tun";
//    $booleans: true, false, true, true, false;
//    $lengths: 1em, 2px, 0.2in, 1en, 7cm;
//
//    @include should(expect( slice($numbers, 2, -2) ), to( deep-equal( ( 2, 3 )            )));
//    @include should(expect( slice($strings, 2, -2) ), to( deep-equal( ( "bar", "baz" )    )));
//    @include should(expect( slice($booleans, 2, -2) ), to( deep-equal( ( false, true )     )));
//    @include should(expect( slice($lengths, 2, -2) ), to( deep-equal( ( 2px, 0.2in )      )));
//  }

//  @include it("should cut off the list at negative min and negative max") {
//    $numbers: 1, 2, 3, 4, 5;
//    $strings: "foo", "bar", "baz", "caw", "tun";
//    $booleans: true, false, true, true, false;
//    $lengths: 1em, 2px, 0.2in, 1en, 7cm;
//
//    @include should(expect( slice($numbers, -3, -2) ), to( deep-equal( ( 3 )     )));
//    @include should(expect( slice($strings, -3, -2) ), to( deep-equal( ( "baz" ) )));
//    @include should(expect( slice($booleans, -3, -2) ), to( deep-equal( ( true )  )));
//    @include should(expect( slice($lengths, -3, -2) ), to( deep-equal( ( 0.2in ) )));
//  }
}