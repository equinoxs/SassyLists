@mixin should($bootcamp-should-a, $bootcamp-should-b) {
  $bootcamp-number-of-assertions: $bootcamp-number-of-assertions + 1 !global;

  $bootcamp-should-a-type: type-of($bootcamp-should-a-value) !global;
  $bootcamp-should-b-type: type-of($bootcamp-should-b-value) !global;

  @if $bootcamp-should-a-value == null {
    $bootcamp-should-a-value: "null" !global;
  }

  @if $bootcamp-should-b-value == null {
    $bootcamp-should-b-value: "null" !global;
  }

  @if $bootcamp-should-a-value == () {
    $bootcamp-should-a-value: "()" !global;
  }

  @if $bootcamp-should-b-value == () {
    $bootcamp-should-b-value: "()" !global;
  }

  @if not $bootcamp-should-b {
    $bootcamp-passing-assertions: false !global;
  }

  @if not $bootcamp-should-b or $bootcamp-setting-verbose {
    $_bootcamp-assertion-status: " ✗" !global;

    @if $bootcamp-passing-assertions {
      $_bootcamp-assertion-status: " ✔" !global;
    }

    #{$_bootcamp-assertion-status}: #{$bootcamp-should-a-text} #{$bootcamp-should-a-value} quote($bootcamp-should-a-type) #{$bootcamp-should-b-text} #{$bootcamp-should-b-value} quote($bootcamp-should-b-type);
  }

  $bootcamp-should-a-text:  null !global;
  $bootcamp-should-b-text:  null !global;
  $bootcamp-should-a-value: null !global;
  $bootcamp-should-b-value: null !global;
}
