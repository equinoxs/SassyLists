@include describe("Replace-Nth") {
    
    $numbers  : 1 2 3 4;
    $strings  : "bar" "foo" "bar" "baz";
    $booleans : true false false true;

    @include it("should replace nth in a list") {
        @include should(expect( replace-nth( $numbers  , 2 , 1     ) ), to(equal( 1 1 3 4                 ) ));
        @include should(expect( replace-nth( $strings  , 2 , "tah" ) ), to(equal( "bar" "tah" "bar" "baz" ) ));
        @include should(expect( replace-nth( $booleans , 2 , true  ) ), to(equal( true true false true    ) ));
    }

    @include it("should remove nth from a list if no value is provided") {
        @include should(expect( replace-nth( $numbers  , 2 , null ) ), to(equal( 1 3 4             ) ));
        @include should(expect( replace-nth( $strings  , 2 , null ) ), to(equal( "bar" "bar" "baz" ) ));
        @include should(expect( replace-nth( $booleans , 2 , null ) ), to(equal( true false true   ) ));
    }

    @include it("should replace negative nth in a list") {
        @include should(expect( replace-nth( $numbers  , -2 , 1     ) ), to(equal( 1 2 1 4                 ) ));
        @include should(expect( replace-nth( $strings  , -2 , "tah" ) ), to(equal( "bar" "foo" "tah" "baz" ) ));
        @include should(expect( replace-nth( $booleans , -2 , true  ) ), to(equal( true false true true    ) ));
    }

    @include it("should remove negative nth from a list if no value is provided") {
        @include should(expect( replace-nth( $numbers  , -2 , null ) ), to(equal( 1 2 4             ) ));
        @include should(expect( replace-nth( $strings  , -2 , null ) ), to(equal( "bar" "foo" "baz" ) ));
        @include should(expect( replace-nth( $booleans , -2 , null ) ), to(equal( true false true   ) ));
    }

    @include it("should return false for invalid indexes") {
        @include should(expect( replace-nth( $numbers ,     0 , null ) ), to( be( false ) ));
        @include should(expect( replace-nth( $numbers , "foo" , null ) ), to( be( false ) ));
    }

}