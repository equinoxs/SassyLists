@include describe("Replace-Nth") {
    
    @include it("should replace nth in a list") {
        $list-1: 1 2 3 4;
        $list-2: true false false true;
        $list-3: "bar" "foo" "bar" "baz";

        $result-1: 1 1 3 4;
        $result-2: true true false true;
        $result-3: "bar" "tah" "bar" "baz";

        @include should(expect( replace-nth($list-1, 2, 1)     ), to(equal( $result-1 )));
        @include should(expect( replace-nth($list-2, 2, true)  ), to(equal( $result-2 )));
        @include should(expect( replace-nth($list-3, 2, "tah") ), to(equal( $result-3 )));
    }

    @include it("should remove nth from a list if no value is provided") {
        $list-1: 1 2 3 4;
        $list-2: true false false true;
        $list-3: "bar" "foo" "bar" "baz";

        $result-1: 1 3 4;
        $result-2: true false true;
        $result-3: "bar" "bar" "baz";

        @include should(expect( replace-nth($list-1, 2, null) ), to(equal( $result-1 )));
        @include should(expect( replace-nth($list-2, 2, null) ), to(equal( $result-2 )));
        @include should(expect( replace-nth($list-3, 2, null) ), to(equal( $result-3 )));
    }

    @include it("should replace negative nth in a list") {
        $list-1: 1 2 3 4;
        $list-2: true false false true;
        $list-3: "bar" "foo" "bar" "baz";

        $result-1: 1 2 1 4;
        $result-2: true false true true;
        $result-3: "bar" "foo" "tah" "baz";

        @include should(expect( replace-nth($list-1, -2, 1)     ), to(equal( $result-1 )));
        @include should(expect( replace-nth($list-2, -2, true)  ), to(equal( $result-2 )));
        @include should(expect( replace-nth($list-3, -2, "tah") ), to(equal( $result-3 )));
    }

    @include it("should remove negative nth from a list if no value is provided") {
        $list-1: 1 2 3 4;
        $list-2: true false false true;
        $list-3: "bar" "foo" "bar" "baz";

        $result-1: 1 2 4;
        $result-2: true false true;
        $result-3: "bar" "foo" "baz";

        @include should(expect( replace-nth($list-1, -2, null) ), to(equal( $result-1 )));
        @include should(expect( replace-nth($list-2, -2, null) ), to(equal( $result-2 )));
        @include should(expect( replace-nth($list-3, -2, null) ), to(equal( $result-3 )));
    }

    @include it("should return false for invalid indexes") {
        $list: 1, 2, 3, 4;

        @include should(expect( replace-nth($list,     0, null) ), to( be( false ) ));
        @include should(expect( replace-nth($list, "foo", null) ), to( be( false ) ));
        
        //@include should(expect( replace-nth($list,     5, null) ), to( be-null()));
        //@include should(expect( replace-nth($list,    -5, null) ), to( be-null()));
    }

}